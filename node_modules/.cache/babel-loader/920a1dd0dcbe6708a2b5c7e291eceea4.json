{"ast":null,"code":"import _classCallCheck from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kuttiari/Desktop/Dash/react-swappable/src/App.js\";\nimport React, { Component } from 'react';\nimport Swappable from './components/Swappable/SwappableComponent';\nimport './App.scss';\nimport AddWidgetDialog from './components/Modal/Modal';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toggle from 'react-toggle';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing.unit * 2,\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleWidgetSelection = function (id) {\n      _this.setState({\n        selectedWidgetId: id\n      });\n\n      var copyWidgets = Object.assign([], _this.state.widgets);\n      var widget = Object.assign({}, _this.state.widgets[_this.state.selectedWidgetIndex]);\n      widget.content = _this.state.widgetOptions.find(function (x) {\n        return x.name == id;\n      }).comp;\n      copyWidgets[_this.state.selectedWidgetIndex] = widget;\n\n      _this.setState({\n        widgets: copyWidgets\n      });\n\n      _this.onRequestClose();\n    };\n\n    _this.deleteEvent = function (id) {\n      _this.setState({\n        widgets: _this.state.widgets.filter(function (el) {\n          return el != id;\n        })\n      });\n    };\n\n    _this.addEvent = function (index) {\n      _this.setState({\n        isModalOpen: true,\n        selectedWidgetIndex: index\n      });\n    };\n\n    _this.onRequestClose = function () {\n      _this.setState({\n        isModalOpen: false\n      });\n    };\n\n    _this.editEvent = function () {\n      _this.setState(function (prevState) {\n        return {\n          editMode: !prevState.editMode\n        };\n      });\n    };\n\n    _this.newWidget = function () {\n      _this.setState({\n        myArray: _this.state.widgets.push({\n          id: 5,\n          content: _this.state.num += 1,\n          xs: 12,\n          sm: 6\n        })\n      });\n    };\n\n    _this.state = {\n      selectedWidgetId: null,\n      widgetOptions: [{\n        name: \"Data Table\",\n        comp: \"\"\n      }, {\n        name: \"List\",\n        comp: \"\"\n      }],\n      widgets: [//array for layout \n      {\n        id: 1,\n        content: React.createElement(\"img\", {\n          className: \"img\",\n          src: \"https://www.grandandtoy.com/OnlineRepository/dcr/landingpage/Services/header-banner-images-services.png\",\n          alt: \"new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }),\n        xs: 12,\n        locked: true\n      }, {\n        id: 2,\n        content: \"\",\n        xs: 12,\n        sm: 6\n      }, {\n        id: 3,\n        content: \"\",\n        xs: 12,\n        sm: 6\n      }, {\n        id: 4,\n        content: \"\",\n        xs: 12,\n        sm: 6\n      }, {\n        id: 5,\n        content: \"\",\n        xs: 12,\n        sm: 6\n      }],\n      editMode: false,\n      isModalOpen: false,\n      selectedWidgetIndex: null,\n      num: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(AddWidgetDialog, {\n        handleWidgetSelection: this.handleWidgetSelection,\n        widgets: this.state.widgetOptions,\n        isModalOpen: this.state.isModalOpen,\n        onRequestClose: this.onRequestClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"gridItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"editToggle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" \", React.createElement(\"button\", {\n        onClick: this.newWidget.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"add new\")), React.createElement(\"span\", {\n        className: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(Toggle, {\n        onClick: this.editEvent,\n        defaultChecked: this.state.tofuIsReady,\n        icons: false,\n        onChange: this.handleTofuChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })))), this.state.widgets.map(function (widget) {\n        return React.createElement(Grid, {\n          item: true,\n          xs: widget.xs,\n          sm: widget.sm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          className: classes.paper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, React.createElement(Swappable, {\n          id: widget.id,\n          content: widget.content,\n          delete: _this2.deleteEvent.bind(_this2, widget),\n          add: _this2.addEvent.bind(_this2),\n          editMode: _this2.state.editMode,\n          locked: widget.locked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        })));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/Users/kuttiari/Desktop/Dash/react-swappable/src/App.js"],"names":["React","Component","Swappable","AddWidgetDialog","PropTypes","withStyles","Paper","Grid","Toggle","styles","theme","root","flexGrow","paper","padding","spacing","unit","textAlign","color","palette","text","secondary","App","props","handleWidgetSelection","id","setState","selectedWidgetId","copyWidgets","Object","assign","state","widgets","widget","selectedWidgetIndex","content","widgetOptions","find","x","name","comp","onRequestClose","deleteEvent","filter","el","addEvent","index","isModalOpen","editEvent","prevState","editMode","newWidget","myArray","push","num","xs","sm","locked","classes","bind","tofuIsReady","handleTofuChange","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Swappable from './components/Swappable/SwappableComponent'\nimport './App.scss';\n\nimport AddWidgetDialog from './components/Modal/Modal';\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toggle from 'react-toggle'\n\n\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n});\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state={\n        selectedWidgetId: null,\n        widgetOptions:[{name:\"Data Table\", comp:\"\"},{name:\"List\", comp:\"\"}],\n\n        widgets:[ //array for layout \n          {id:1, content: <img className=\"img\" src=\"https://www.grandandtoy.com/OnlineRepository/dcr/landingpage/Services/header-banner-images-services.png\" alt=\"new\"/>, xs:12, locked:true},\n          {id:2, content: \"\",xs:12,sm:6},\n          {id:3, content: \"\",xs:12,sm:6},\n          {id:4, content: \"\",xs:12,sm:6},\n          {id:5, content: \"\",xs:12,sm:6}\n        ],\n        editMode:false,\n        isModalOpen: false,\n        selectedWidgetIndex:null,\n        num:0\n      }\n\n    }\n    handleWidgetSelection=(id) => {\n      \n      this.setState({ selectedWidgetId: id })\n      const copyWidgets=Object.assign([],this.state.widgets); \n      let widget = Object.assign({}, this.state.widgets[this.state.selectedWidgetIndex]);\n      \n      widget.content=this.state.widgetOptions.find(x=>x.name==id).comp;\n      \n      copyWidgets[this.state.selectedWidgetIndex]=widget; \n      this.setState({ \n          widgets:copyWidgets\n      }) \n      this.onRequestClose();\n    }\n    deleteEvent=(id)=>{\n      this.setState({\n        widgets:this.state.widgets.filter(el => el != id )\n      }); \n    }\n    addEvent=(index)=>{\n        this.setState({ \n            isModalOpen: true,\n            selectedWidgetIndex:index\n        })\n        \n    }\n    \n    onRequestClose = () => {\n        this.setState({\n          isModalOpen: false,\n        });\n      }\n\n    editEvent=()=>{\n      this.setState(prevState=>({\n        editMode:!prevState.editMode,\n      }));\n    }\n    newWidget=()=>{\n      this.setState({ myArray: this.state.widgets.push( {id:5, content: this.state.num+=1,xs:12,sm:6}) })\n    }\n    render() {\n      const { classes } = this.props;\n\n      return (\n\n      <div className={classes.root}>\n      <AddWidgetDialog handleWidgetSelection={this.handleWidgetSelection} widgets={this.state.widgetOptions} isModalOpen={this.state.isModalOpen} onRequestClose={this.onRequestClose} />\n        <div className=\"gridItem\">\n        <Grid container spacing={24}>\n        <div className=\"editToggle\">\n        <div className=\"checkbox\">\n        <label>\n        <div> <button onClick={this.newWidget.bind(this)}>add new</button></div>\n        <span className=\"edit\">Edit</span>\n            <Toggle\n              onClick={this.editEvent}\n              defaultChecked={this.state.tofuIsReady}\n              icons={false}\n              onChange={this.handleTofuChange} />\n           \n         </label>\n        \n\n        </div>\n        </div>\n            {\n                this.state.widgets.map((widget)=>{\n                    return(\n                        <Grid item xs={widget.xs} sm={widget.sm}>\n                            <Paper className={classes.paper}><Swappable id={widget.id} content={widget.content} delete={this.deleteEvent.bind(this,widget)} add={this.addEvent.bind(this)} editMode={this.state.editMode} locked={widget.locked}/></Paper>\n                         </Grid>\n                    )\n                })\n            }\n        </Grid>\n        </div>\n      </div>\n      );\n    }\n  }\n\n  App.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n\n  export default withStyles(styles)(App);\n"]},"metadata":{},"sourceType":"module"}