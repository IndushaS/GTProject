{"ast":null,"code":"import _classCallCheck from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kuttiari/Desktop/Dash/react-swappable/src/components/Swappable/SwappableComponent.js\";\nimport React, { Component } from 'react';\nimport './Swappable.scss';\n\nvar Swappable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Swappable, _Component);\n\n  function Swappable() {\n    var _this;\n\n    _classCallCheck(this, Swappable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Swappable).call(this));\n    _this.state = {\n      customFunc: null\n    };\n    return _this;\n  }\n\n  _createClass(Swappable, [{\n    key: \"allowDrop\",\n    value: function allowDrop(ev) {\n      ev.preventDefault();\n    }\n  }, {\n    key: \"drag\",\n    value: function drag(ev) {\n      var customFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(\"dragginng\");\n      console.log(ev.dataTransfer); //console.log(ev.dataTransfer.getData(\"src\"));\n\n      debugger;\n\n      if (ev.dataTransfer.getData(\"src\") !== \"\") {\n        ev.dataTransfer.setData(\"src\", ev.target.id);\n        console.log(ev.target.parentNode, 'TARGET DRAGSTART');\n        this.setState({\n          initialParentNode: ev.target.parentNode\n        });\n      }\n    }\n  }, {\n    key: \"dragEnd\",\n    value: function dragEnd(ev) {\n      var customFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(ev.target.parentNode, 'TARGET DRAGEND');\n\n      if (customFunc && ev.target.parentNode != this.state.initialParentNode) {\n        console.log('custom func');\n        this.props.customFunc();\n      }\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(ev, dragableId, dropzoneId) {\n      var customFunc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var swappable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      ev.preventDefault();\n      console.log(\"ev\");\n      console.log(ev);\n      var src = document.getElementById(ev.dataTransfer.getData(\"src\"));\n      debugger;\n      var srcParent = src.parentNode;\n      var target = document.getElementById(dragableId);\n      console.log(src, 'dragged element');\n      console.log(srcParent, 'parent of dragged');\n      console.log(target, 'element to be swapped');\n      swappable ? this.swapElements(src, target, srcParent) : this.transferElement(src, dropzoneId);\n    }\n  }, {\n    key: \"swapElements\",\n    value: function swapElements(src, target, srcParent) {\n      target.replaceWith(src);\n      srcParent.appendChild(target);\n    }\n  }, {\n    key: \"transferElement\",\n    value: function transferElement(src, dropzoneId) {\n      var dropzone = document.getElementById(dropzoneId);\n      dropzone.appendChild(src);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          id = _this$props.id,\n          content = _this$props.content,\n          swappable = _this$props.swappable,\n          customFunc = _this$props.customFunc,\n          locked = _this$props.locked;\n      var dropzoneId = 'drop' + id;\n      var dragableId = 'drag' + id;\n      console.log(customFunc, 'customFunc');\n      return React.createElement(\"div\", {\n        className: \"dropZone\",\n        id: dropzoneId,\n        onDrop: function onDrop(event) {\n          return _this2.drop(event, dragableId, dropzoneId, customFunc, swappable);\n        },\n        onDragOver: function onDragOver(event) {\n          return _this2.allowDrop(event);\n        } // style={dropZoneStyle}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dragZone\",\n        id: dragableId,\n        draggable: \"true\",\n        onDragStart: function onDragStart(event) {\n          return _this2.drag(event);\n        },\n        onDragEnd: function onDragEnd(event) {\n          return _this2.dragEnd(event, customFunc);\n        } //style={draggableStyle}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.props.editMode && (content == \"\" ? React.createElement(\"div\", {\n        className: \"addButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success\",\n        onClick: this.props.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Add Widget\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        key: this.props.widget,\n        className: \"close\",\n        onClick: this.props.delete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"\\xD7\")))), content));\n    }\n  }]);\n\n  return Swappable;\n}(Component);\n\nexport default Swappable;","map":{"version":3,"sources":["/Users/kuttiari/Desktop/Dash/react-swappable/src/components/Swappable/SwappableComponent.js"],"names":["React","Component","Swappable","state","customFunc","ev","preventDefault","console","log","dataTransfer","getData","setData","target","id","parentNode","setState","initialParentNode","props","dragableId","dropzoneId","swappable","src","document","getElementById","srcParent","swapElements","transferElement","replaceWith","appendChild","dropzone","content","locked","event","drop","allowDrop","drag","dragEnd","editMode","add","widget","delete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;;IAEMC,S;;;;;AACF,uBAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE;AADH,KAAb;AAHU;AAMb;;;;8BAESC,E,EAAI;AACVA,MAAAA,EAAE,CAACC,cAAH;AACH;;;yBAEID,E,EAAuB;AAAA,UAAnBD,UAAmB,uEAAN,IAAM;AACxBG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACI,YAAf,EAFwB,CAGxB;;AACA;;AACA,UAAIJ,EAAE,CAACI,YAAH,CAAgBC,OAAhB,CAAwB,KAAxB,MAAmC,EAAvC,EAA0C;AACtCL,QAAAA,EAAE,CAACI,YAAH,CAAgBE,OAAhB,CAAwB,KAAxB,EAA+BN,EAAE,CAACO,MAAH,CAAUC,EAAzC;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACO,MAAH,CAAUE,UAAtB,EAAkC,kBAAlC;AAEA,aAAKC,QAAL,CAAc;AACVC,UAAAA,iBAAiB,EAAEX,EAAE,CAACO,MAAH,CAAUE;AADnB,SAAd;AAGH;AACJ;;;4BAEOT,E,EAAuB;AAAA,UAAnBD,UAAmB,uEAAN,IAAM;AACvBG,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACO,MAAH,CAAUE,UAAtB,EAAkC,gBAAlC;;AACA,UAAIV,UAAU,IAAKC,EAAE,CAACO,MAAH,CAAUE,UAAV,IAAwB,KAAKX,KAAL,CAAWa,iBAAtD,EAA0E;AACtET,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKS,KAAL,CAAWb,UAAX;AACH;AACR;;;yBAEIC,E,EAAIa,U,EAAYC,U,EAAiD;AAAA,UAArCf,UAAqC,uEAAxB,IAAwB;AAAA,UAAlBgB,SAAkB,uEAAN,IAAM;AAClEf,MAAAA,EAAE,CAACC,cAAH;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,UAAIgB,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwBlB,EAAE,CAACI,YAAH,CAAgBC,OAAhB,CAAwB,KAAxB,CAAxB,CAAV;AACA;AACA,UAAIc,SAAS,GAAGH,GAAG,CAACP,UAApB;AACA,UAAIF,MAAM,GAAGU,QAAQ,CAACC,cAAT,CAAwBL,UAAxB,CAAb;AAEAX,MAAAA,OAAO,CAACC,GAAR,CAAYa,GAAZ,EAAiB,iBAAjB;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ,EAAuB,mBAAvB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ,EAAoB,uBAApB;AAEAQ,MAAAA,SAAS,GAAG,KAAKK,YAAL,CAAkBJ,GAAlB,EAAuBT,MAAvB,EAA+BY,SAA/B,CAAH,GAA+C,KAAKE,eAAL,CAAqBL,GAArB,EAA0BF,UAA1B,CAAxD;AAEH;;;iCAEYE,G,EAAKT,M,EAAQY,S,EAAW;AACjCZ,MAAAA,MAAM,CAACe,WAAP,CAAmBN,GAAnB;AACAG,MAAAA,SAAS,CAACI,WAAV,CAAsBhB,MAAtB;AACH;;;oCAEeS,G,EAAKF,U,EAAY;AAC7B,UAAIU,QAAQ,GAAGP,QAAQ,CAACC,cAAT,CAAwBJ,UAAxB,CAAf;AACAU,MAAAA,QAAQ,CAACD,WAAT,CAAqBP,GAArB;AACH;;;6BAEQ;AAAA;;AAAA,wBAEiD,KAAKJ,KAFtD;AAAA,UAEGJ,EAFH,eAEGA,EAFH;AAAA,UAEOiB,OAFP,eAEOA,OAFP;AAAA,UAEgBV,SAFhB,eAEgBA,SAFhB;AAAA,UAE2BhB,UAF3B,eAE2BA,UAF3B;AAAA,UAEuC2B,MAFvC,eAEuCA,MAFvC;AAGL,UAAMZ,UAAU,GAAG,SAASN,EAA5B;AACA,UAAMK,UAAU,GAAG,SAASL,EAA5B;AAEAN,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ,EAAwB,YAAxB;AACA,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AACI,QAAA,EAAE,EAAIe,UADV;AAEI,QAAA,MAAM,EAAE,gBAACa,KAAD;AAAA,iBAAW,MAAI,CAACC,IAAL,CAAUD,KAAV,EAAiBd,UAAjB,EAA6BC,UAA7B,EAAyCf,UAAzC,EAAqDgB,SAArD,CAAX;AAAA,SAFZ;AAGI,QAAA,UAAU,EAAE,oBAACY,KAAD;AAAA,iBAAW,MAAI,CAACE,SAAL,CAAeF,KAAf,CAAX;AAAA,SAHhB,CAIG;AAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAK,QAAA,SAAS,EAAC,UAAf;AACI,QAAA,EAAE,EAAGd,UADT;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,WAAW,EAAE,qBAACc,KAAD;AAAA,iBAAW,MAAI,CAACG,IAAL,CAAUH,KAAV,CAAX;AAAA,SAHjB;AAII,QAAA,SAAS,EAAI,mBAACA,KAAD;AAAA,iBAAW,MAAI,CAACI,OAAL,CAAaJ,KAAb,EAAoB5B,UAApB,CAAX;AAAA,SAJjB,CAKI;AALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKa,KAAL,CAAWoB,QAAX,KAAwBP,OAAO,IAAE,EAAT,GAAa;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yBAAhC;AAA0D,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWqB,GAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA3B,CAAb,GAAqJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAQ,QAAA,GAAG,EAAE,KAAKrB,KAAL,CAAWsB,MAAxB;AAAgC,QAAA,SAAS,EAAC,OAA1C;AAAkD,QAAA,OAAO,EAAE,KAAKtB,KAAL,CAAWuB,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,CAA7K,CAAN,CAPJ,EAQMV,OARN,CANJ,CADJ;AAoBH;;;;EA1FmB7B,S;;AA6FxB,eAAeC,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport './Swappable.scss';\n\nclass Swappable extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            customFunc: null\n        }\n    }\n\n    allowDrop(ev) {\n        ev.preventDefault();\n    }\n\n    drag(ev, customFunc = null) {\n        console.log(\"dragginng\");\n        console.log(ev.dataTransfer);\n        //console.log(ev.dataTransfer.getData(\"src\"));\n        debugger;\n        if (ev.dataTransfer.getData(\"src\") !== \"\"){\n            ev.dataTransfer.setData(\"src\", ev.target.id);\n            console.log(ev.target.parentNode, 'TARGET DRAGSTART')\n\n            this.setState({\n                initialParentNode: ev.target.parentNode\n            })\n        }\n    }\n\n    dragEnd(ev, customFunc = null) {\n            console.log(ev.target.parentNode, 'TARGET DRAGEND')\n            if (customFunc && (ev.target.parentNode != this.state.initialParentNode)) {\n                console.log('custom func')\n                this.props.customFunc()\n            }\n    }\n\n    drop(ev, dragableId, dropzoneId, customFunc = null, swappable = true) {\n        ev.preventDefault();\n        console.log(\"ev\");\n        console.log(ev);\n        let src = document.getElementById(ev.dataTransfer.getData(\"src\"));\n        debugger;\n        let srcParent = src.parentNode;\n        let target = document.getElementById(dragableId);\n\n        console.log(src, 'dragged element');\n        console.log(srcParent, 'parent of dragged');\n        console.log(target, 'element to be swapped')\n\n        swappable ? this.swapElements(src, target, srcParent) : this.transferElement(src, dropzoneId)\n\n    }\n\n    swapElements(src, target, srcParent) {\n        target.replaceWith(src);\n        srcParent.appendChild(target);\n    }\n\n    transferElement(src, dropzoneId) {\n        let dropzone = document.getElementById(dropzoneId)\n        dropzone.appendChild(src);\n    }\n\n    render() {\n\n        const { id, content, swappable, customFunc, locked} = this.props\n        const dropzoneId = 'drop' + id\n        const dragableId = 'drag' + id\n\n        console.log(customFunc, 'customFunc')\n        return (\n            <div className=\"dropZone\"\n                id = {dropzoneId}\n                onDrop={(event) => this.drop(event, dragableId, dropzoneId, customFunc, swappable)} \n                onDragOver={(event) => this.allowDrop(event)} \n               // style={dropZoneStyle}\n                >\n                <div className=\"dragZone\"\n                    id={ dragableId }\n                    draggable=\"true\"\n                    onDragStart={(event) => this.drag(event)}\n                    onDragEnd = {(event) => this.dragEnd(event, customFunc)}\n                    //style={draggableStyle}\n                    >\n                    <div>{this.props.editMode && (content==\"\"? <div className=\"addButton\"><button type=\"button\" className=\"btn btn-outline-success\" onClick={this.props.add}>Add Widget</button></div>:<div><button key={this.props.widget} className=\"close\" onClick={this.props.delete}>&times;</button></div>)}</div>\n                    { content }\n                \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Swappable;"]},"metadata":{},"sourceType":"module"}