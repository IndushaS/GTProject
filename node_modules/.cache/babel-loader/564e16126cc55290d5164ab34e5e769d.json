{"ast":null,"code":"import _classCallCheck from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kuttiari/Desktop/Dash/react-swappable/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kuttiari/Desktop/Dash/react-swappable/src/components/SwappableComponent.js\";\nimport React, { Component } from 'react';\n\nvar Swappable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Swappable, _Component);\n\n  function Swappable() {\n    var _this;\n\n    _classCallCheck(this, Swappable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Swappable).call(this));\n    _this.state = {\n      customFunc: null\n    };\n    return _this;\n  }\n\n  _createClass(Swappable, [{\n    key: \"allowDrop\",\n    value: function allowDrop(ev) {\n      ev.preventDefault();\n    }\n  }, {\n    key: \"drag\",\n    value: function drag(ev) {\n      var customFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      ev.dataTransfer.setData(\"src\", ev.target.id);\n      console.log(ev.target.parentNode, 'TARGET DRAGSTART');\n      this.setState({\n        initialParentNode: ev.target.parentNode\n      });\n    }\n  }, {\n    key: \"dragEnd\",\n    value: function dragEnd(ev) {\n      var customFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      console.log(ev.target.parentNode, 'TARGET DRAGEND');\n\n      if (customFunc && ev.target.parentNode != this.state.initialParentNode) {\n        console.log('custom func');\n        this.props.customFunc();\n      }\n    }\n  }, {\n    key: \"drop\",\n    value: function drop(ev, dragableId, dropzoneId) {\n      var customFunc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var swappable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n      ev.preventDefault();\n      var src = document.getElementById(ev.dataTransfer.getData(\"src\"));\n      var srcParent = src.parentNode;\n      var target = document.getElementById(dragableId);\n      console.log(src, 'dragged element');\n      console.log(srcParent, 'parent of dragged');\n      console.log(target, 'element to be swapped');\n      swappable ? this.swapElements(src, target, srcParent) : this.transferElement(src, dropzoneId);\n    }\n  }, {\n    key: \"swapElements\",\n    value: function swapElements(src, target, srcParent) {\n      target.replaceWith(src);\n      srcParent.appendChild(target);\n    }\n  }, {\n    key: \"transferElement\",\n    value: function transferElement(src, dropzoneId) {\n      var dropzone = document.getElementById(dropzoneId);\n      dropzone.appendChild(src);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var dropZoneStyle = {\n        width: '450px',\n        minHeight: '300px',\n        padding: '10px',\n        border: '1px solid #aaaaaa'\n      };\n      var draggableStyle = {\n        width: '400px',\n        height: '300px',\n        padding: '10px',\n        border: '1px solid red'\n      };\n      var _this$props = this.props,\n          id = _this$props.id,\n          content = _this$props.content,\n          swappable = _this$props.swappable,\n          customFunc = _this$props.customFunc;\n      var dropzoneId = 'drop' + id;\n      var dragableId = 'drag' + id;\n      console.log(customFunc, 'customFunc');\n      return React.createElement(\"div\", {\n        id: dropzoneId,\n        onDrop: function onDrop(event) {\n          return _this2.drop(event, dragableId, dropzoneId, customFunc, swappable);\n        },\n        onDragOver: function onDragOver(event) {\n          return _this2.allowDrop(event);\n        },\n        style: dropZoneStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: dragableId,\n        draggable: \"true\",\n        onDragStart: function onDragStart(event) {\n          return _this2.drag(event);\n        },\n        onDragEnd: function onDragEnd(event) {\n          return _this2.dragEnd(event, customFunc);\n        },\n        style: draggableStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, content, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, content == \"\" ? React.createElement(\"button\", {\n        onClick: this.props.add,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Add Widget\") : React.createElement(\"button\", {\n        onClick: this.props.delete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Delete\"))));\n    }\n  }]);\n\n  return Swappable;\n}(Component);\n\nexport default Swappable;","map":{"version":3,"sources":["/Users/kuttiari/Desktop/Dash/react-swappable/src/components/SwappableComponent.js"],"names":["React","Component","Swappable","state","customFunc","ev","preventDefault","dataTransfer","setData","target","id","console","log","parentNode","setState","initialParentNode","props","dragableId","dropzoneId","swappable","src","document","getElementById","getData","srcParent","swapElements","transferElement","replaceWith","appendChild","dropzone","dropZoneStyle","width","minHeight","padding","border","draggableStyle","height","content","event","drop","allowDrop","drag","dragEnd","add","delete"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass Swappable extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            customFunc: null\n        }\n    }\n\n    allowDrop(ev) {\n        ev.preventDefault();\n    }\n\n    drag(ev, customFunc = null) {\n        ev.dataTransfer.setData(\"src\", ev.target.id);\n        console.log(ev.target.parentNode, 'TARGET DRAGSTART')\n\n        this.setState({\n            initialParentNode: ev.target.parentNode\n        })\n    }\n\n    dragEnd(ev, customFunc = null) {\n\n        console.log(ev.target.parentNode, 'TARGET DRAGEND')\n        if (customFunc && (ev.target.parentNode != this.state.initialParentNode)) {\n            console.log('custom func')\n            this.props.customFunc()\n        }\n    }\n\n    drop(ev, dragableId, dropzoneId, customFunc = null, swappable = true) {\n        ev.preventDefault();\n        let src = document.getElementById(ev.dataTransfer.getData(\"src\"));\n        let srcParent = src.parentNode;\n        let target = document.getElementById(dragableId);\n\n        console.log(src, 'dragged element');\n        console.log(srcParent, 'parent of dragged');\n        console.log(target, 'element to be swapped')\n\n        swappable ? this.swapElements(src, target, srcParent) : this.transferElement(src, dropzoneId)\n\n    }\n\n    swapElements(src, target, srcParent) {\n        target.replaceWith(src);\n        srcParent.appendChild(target);\n    }\n\n    transferElement(src, dropzoneId) {\n        let dropzone = document.getElementById(dropzoneId)\n        dropzone.appendChild(src);\n    }\n\n    render() {\n        const dropZoneStyle = {                          \n            width: '450px',\n            minHeight: '300px',\n            padding: '10px',\n            border: '1px solid #aaaaaa'\n        };\n\n        const draggableStyle = { \n            width: '400px',\n            height: '300px',\n            padding: '10px',\n            border: '1px solid red'\n        };\n\n        const { id, content, swappable, customFunc } = this.props\n        const dropzoneId = 'drop' + id\n        const dragableId = 'drag' + id\n\n        console.log(customFunc, 'customFunc')\n        return (\n            <div\n                id = {dropzoneId}\n                onDrop={(event) => this.drop(event, dragableId, dropzoneId, customFunc, swappable)} \n                onDragOver={(event) => this.allowDrop(event)} \n                style={dropZoneStyle}>\n                <div id={ dragableId }\n                    draggable=\"true\"\n                    onDragStart={(event) => this.drag(event)}\n                    onDragEnd = {(event) => this.dragEnd(event, customFunc)}\n                    style={draggableStyle}>\n\n                    { content }\n                    <div>{content==\"\"?<button onClick={this.props.add}>Add Widget</button>:<button onClick={this.props.delete}>Delete</button>}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Swappable;"]},"metadata":{},"sourceType":"module"}